# vlabs/docker-compose.yml
# Ensure this file is located at /home/nikos/github/ngeran/vlabs/docker-compose.yml
# Verify by running: cat /home/nikos/github/ngeran/vlabs/docker-compose.yml

# Specifies the Docker Compose file format version.
# Version 3.8 is modern, stable, and compatible with our setup.
version: '3.8'

# Defines the services (containers) that make up the application.
services:

  # -----------------------------------
  # SECTION 1: BACKEND SERVICE CONFIGURATION
  # -----------------------------------
  # The Node.js backend service handles API requests and WebSocket communication.
  backend:
    container_name: vlabs_backend
    # Build the backend image using the Dockerfile in ./backend.
    build:
      context: ./backend
      dockerfile: Dockerfile
    # Map port 3001 on the host to 3001 in the container for API access.
    ports:
      - "3001:3001"
    # Mounts for live code updates, Docker control, and file access.
    volumes:
      # Mount backend code for development.
      - ${PROJECT_ROOT}/backend:/app
      # Mount Docker socket to allow backend to run Docker commands.
      - /var/run/docker.sock:/var/run/docker.sock
      # Mount public directory for lab definitions and navigation.yaml.
      - ${PROJECT_ROOT}/public:/public
      # Mount python_pipeline for script configs and output.
      - ${PROJECT_ROOT}/python_pipeline:/python_pipeline
      # Mount backups directory for backup_restore script access.
      - ${PROJECT_ROOT}/python_pipeline/tools/backup_and_restore/backups:/backups
    # Environment variables for path mapping.
    environment:
      # Absolute path on the host to the project root, used by server.js.
      HOST_PROJECT_ROOT: "${PROJECT_ROOT}"
    # Restart policy to ensure service reliability.
    restart: unless-stopped
    # Command to start the Node.js server.
    command: node server.js
    # Ensure python_runner is built before backend starts.
    depends_on:
      - python_runner
    # Connect to the custom network.
    networks:
      - vlabs-net

  # -----------------------------------
  # SECTION 2: PYTHON RUNNER SERVICE CONFIGURATION
  # -----------------------------------
  # The Python utility container, used dynamically by the backend for script execution.
  python_runner:
    container_name: vlabs_python_runner
    # Build the image with a predictable name for dynamic runs.
    image: vlabs-python-runner
    build:
      context: ${PROJECT_ROOT}/python_pipeline
      dockerfile: Dockerfile
    # Keep container running for debugging (optional; can be removed for build-only).
    command: tail -f /dev/null
    # Mount backups directory for script access.
    volumes:
      - ${PROJECT_ROOT}/python_pipeline/tools/backup_and_restore/backups:/backups
    # Connect to the custom network.
    networks:
      - vlabs-net

# -----------------------------------
# SECTION 3: NETWORK CONFIGURATION
# -----------------------------------
# Defines a custom bridge network for communication between services.
networks:
  vlabs-net:
    driver: bridge
